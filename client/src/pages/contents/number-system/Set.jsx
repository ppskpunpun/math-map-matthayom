import { useRef } from 'react'
import Main from "../../../components/Main"
import Banner from "../../../components/Banner"
import H2 from "../../../components/H2"
import H3 from '../../../components/H3'
import P from '../../../components/P'
import TOC from "../../../components/TOC"
import Sep from '../../../components/Sep'
import { List, Li } from '../../../components/List'

export default function Set() {
  const c1 = useRef(null);
  const c2 = useRef(null);
  const c3 = useRef(null);
  const c4 = useRef(null);
  const c5 = useRef(null);
  const c6 = useRef(null);

  const contents = [
    ['เซตคืออะไร', c1],
    ['วิธีการเขียนเซต', c2],
    ['ประเภทของเซต', c3],
    ['เซตของจำนวนต่างๆ', c4],
    ['เซตที่เกี่ยวข้อง', c5],
    ['การดำเนินการระหว่างเซต', c6],
  ];

  return (
    <div>
      <Banner text='เซต (Set)' />
      <Main>
        <TOC contents={contents} />
        <Sep />

        <H2>เซตคืออะไร <div ref={c1} /></H2>
        <P><b>เซต (Set)</b> หมายถึงกลุ่มของสิ่งต่างๆ ที่สามารถระบุได้อย่างชัดเจนว่าสิ่งใดอยู่หรือไม่อยู่ในกลุ่มนั้น สมาชิกของเซตเรียกว่า <b>"สมาชิกของเซต"</b> เขียนแทนได้ด้วยเครื่องหมาย ∈ เช่น 555 เป้นสมาชิกของจำนวนเต็ม สามารถเขียนได้อีกแบบคือ 555 ∈ ℤ</P>

        <Sep />
        <H2>วิธีการเขียนเซต <div ref={c2} /></H2>
        <List title='มี 2 วิธีหลัก'>
          <Li><b>แบบแจกแจงสมาชิก</b> คือการเขียนสมาชิกทุกตัวในวงเล็บปีกกา {`{ }`} โดยใช้เครื่องหมายจุลภาค “,” คั่น เช่น A = {`{1, 2, 3, 4, 5}`}</Li>
          <Li><b>แบบบอกเงื่อนไข</b> ใช้ตัวแปรแทนสมาชิกแล้วกำหนดเงื่อนไข เช่น A = {`{x | x เป็นจำนวนนับที่มีค่าน้อยกว่าหรือเท่ากับ 5}`}, B = {`{n | n < 2}`}</Li>
        </List>

        <Sep />
        <H2>ประเภทของเซต <div ref={c3} /></H2>
        <List title='ตัวอย่างประเภทของเซต'>
          <Li><b>เซตจำกัด</b> คือเซตที่สามารถระบุจำนวนสมาชิกได้ เช่น B = {`{ก, ข, ค, ง}`} มีสมาชิก 4 ตัว</Li>
          <Li><b>เซตอนันต์</b> คือเซตที่มีสมาชิกไม่สิ้นสุด เช่น V = {`{v | v เป็นจำนวนเต็ม}`}</Li>
          <Li><b>เซตว่าง</b> คือเซตที่ไม่มีสมาชิกใดๆ เลย เขียนแทนด้วย ∅</Li>
        </List>

        <Sep />
        <H2>เซตของจำนวนต่างๆ <div ref={c4} /></H2>
        <List>
          <Li><b>ℕ (Natural Numbers)</b> เซตของจำนวนนับ คือ {`{1, 2, 3, ...}`}</Li>
          <Li><b>ℤ (Integers)</b> เซตของจำนวนเต็ม คือ {`{..., -2, -1, 0, 1, 2, ...}`}</Li>
          <Li><b>ℚ (Rational Numbers)</b> เซตของจำนวนตรรกยะ คือจำนวนที่เขียนในรูปเศษส่วน a/b โดยที่ a, b เป็นจำนวนเต็ม และ b ≠ 0</Li>
          <Li><b>ℝ (Real Numbers)</b> เซตของจำนวนจริง รวมทั้งจำนวนตรรกยะและอตรรกยะ เช่น √2, π</Li>
          <Li><b>ℂ (Complex Numbers)</b> เซตของจำนวนเชิงซ้อน เช่น a + bi โดยที่ a และ b เป็นจำนวนจริง และ i คือรากที่สองของ -1</Li>
          <Li>ยังมีการเขียนเซตแยกระหว่างจำนวนบวกและจำนวนลบได้ เช่น จำนวนเต็มบวก (ℤ⁺) หรือ จำนวนจริงลบ (ℝ⁻)</Li>
        </List>

        <Sep />
        <H2>เซตที่เกี่ยวข้อง <div ref={c5} /></H2>
        <List>
          <Li><b>เซตที่เท่ากัน</b> คือสองเซตที่มีสมาชิกเหมือนกันทุกตัว เช่น A = {`{0, 1, 2, 3}`} และ B = {`{1, 0, 2, 3}`} ดังนั้น A = B</Li>
          <Li><b>สับเซต</b> ถ้าสมาชิกทุกตัวของเซต A อยู่ในเซต B จะเรียก A เป็นสับเซตของ B</Li>
          <Li><b>เพาเวอร์เซต</b> คือเซตของสับเซตทั้งหมดของเซต A เขียนแทนด้วย P(A)</Li>
          <Li><b>แผนภาพเวนน์</b> แทนเอกภพสัมพัทธ์ U ด้วยรูปสี่เหลี่ยมหรือรูปปิด และเซตอื่นๆ เป็นวงกลมหรือรูปปิดที่อยู่ภายใน U</Li>
        </List>

        <Sep />
        <H2>การดำเนินการระหว่างเซต <div ref={c6} /></H2>
        <List>
          <Li><b>อินเตอร์เซกชัน (∩)</b> A ∩ B = {`{x | x เป็นสมาชิกของ A และ x เป็นสมาชิกของ B}`}</Li>
          <Li><b>ยูเนียน (∪)</b> A ∪ B = {`{x | x เป็นสมาชิกของ A หรือ x เป็นสมาชิกของ B}`}</Li>
          <Li><b>คอมพลีเมนต์ (A′)</b> A′ = {`{x | x เป็นสมาชิกของ U และ x ไม่เป็นสมาชิกของ A}`}</Li>
          <Li><b>ผลต่างเซต</b> A − B = {`{x | x เป็นสมาชิกของ A และ x ไม่เป็นสมาชิกของ B}`}</Li>
        </List>
      </Main>
    </div>
  );
}